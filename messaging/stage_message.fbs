include "graph_types.fbs";

namespace showtime;

// Signal messages
// ---------------
enum Signal : byte {
    EMPTY,
    OK,
    CLIENT_SYNC,
    CLIENT_HEARTBEAT,

    //Error signals
    ERR_MSG_TYPE_UNKNOWN,
    ERR_MSG_MALFORMED,
    ERR_STAGE_BAD_CABLE_DISCONNECT_REQUEST,
    ERR_STAGE_BAD_CABLE_CONNECT_REQUEST,
    ERR_STAGE_PERFORMER_NOT_FOUND,
    ERR_STAGE_PERFORMER_ALREADY_EXISTS,
    ERR_STAGE_PERFORMER_ALREADY_CONNECTED,
    ERR_STAGE_REQUEST_MISSING_ARG,
    ERR_ENTITY_NOT_FOUND,
    ERR_ENTITY_ALREADY_EXISTS,
    ERR_CABLE_PLUGS_NOT_FOUND,
    ERR_STAGE_TIMEOUT,
    ERR_NOT_CONNECTED
}

enum ClientLeaveReason : byte {
    QUIT,
    TIMEOUT,
    CRASH
}

enum ServerStatus: byte {
    QUIT,
    CRASH
}

enum ConnectionType: byte {
    RELIABLE,
    UNRELIABLE
}

table SignalMessage {
    signal:Signal;
}

table ServerStatusMessage {
    status:ServerStatus;
}

// Client connection messages
// --------------------------
table ClientJoinRequest {
    performer:Performer;
    graph_reliable_address:string;
    graph_reliable_public_address:string;
    graph_unreliable_address:string;
    graph_unreliable_public_address:string;
}

table ClientGraphHandshakeStart {
    receiver_URI:string;
    connection_type:ConnectionType;
    receiver_address:string;
    receiver_public_address:string;
}

table ClientGraphHandshakeStop {
    receiver_URI:string;
    connection_type:ConnectionType;
}

table ClientGraphHandshakeListen {
    sender_URI:string;
    connection_type:ConnectionType;
    sender_address:string;
    sender_public_address:string;
}

table ClientLeaveRequest {
    performer_URI:string;
    reason:ClientLeaveReason;
}


// Hierarchy messages
// ------------------
table EntityCreateRequest {
    entity:EntityTypes;
}

table EntityReadRequest {
    URI:string;
}

table EntityUpdateRequest {
    entity:EntityTypes;
    original_path:string;
}

table EntityDestroyRequest {
    URI:string;
}

table EntityTakeOwnershipRequest {
    URI:string;
    new_owner:string;
}

table EntityObserveRequest {
    URI:string;
}


// Factory and entity creation messages
// ------------------------------------
table FactoryCreateEntityRequest {
    creatable_entity_URI:string;
    name:string;
}

table FactoryCreateEntityACK {
    created_entity_URI:string;
}


// Cable messages
// --------------
table CableCreateRequest {
    cable:Cable;
}

table CableReadRequest {
    address:Cable;
}

table CableUpdateRequest {
    old_address:Cable;
    new_address:Cable;
}

table CableDestroyRequest {
    cable:Cable;
}


// Unions
// ------
union Content {
    SignalMessage,
    // ----------
    ServerStatusMessage,
    // ----------
    ClientJoinRequest,
    ClientLeaveRequest,
    ClientGraphHandshakeStart,
    ClientGraphHandshakeStop,
    ClientGraphHandshakeListen,
    // ----------
    EntityCreateRequest,
    EntityReadRequest,
    EntityUpdateRequest,
    EntityDestroyRequest,
    EntityTakeOwnershipRequest,
    EntityObserveRequest,
    // ----------
    FactoryCreateEntityRequest,
    FactoryCreateEntityACK,
    // ----------
    CableCreateRequest,
    CableReadRequest,
    CableUpdateRequest,
    CableDestroyRequest
}


// Message envelope
// ----------------
table StageMessage {
    content:Content;
}

root_type StageMessage;
